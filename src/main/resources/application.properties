
spring.cache.cache-names=rate-limit-buckets
spring.cache.caffeine.spec=maximumSize=100000,expireAfterAccess=3600s

bucket4j.enabled: true
bucket4j.filters[0].cache-name: rate-limit-buckets
bucket4j.filters[0].url: /home/.*
bucket4j.filters[0].strategy=first
bucket4j.filters[0].rate-limits[0].expression="getHeader('X-api-key')"
bucket4j.filters[0].rate-limits[0].execute-condition=getHeader('X-api-key').startsWith('PX001-')
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=2
bucket4j.filters[0].rate-limits[0].bandwidths[0].time=15
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=seconds
bucket4j.filters[0].http-response-body={ "message": ":(", "status": 429, "error": "Too Many Requests" }
bucket4j.filters[0].hide-http-response-headers=false
bucket4j.filters[0].rate-limits[0].bandwidths[0].fixed-refill-interval=30
bucket4j.filters[0].rate-limits[0].bandwidths[0].fixed-refill-interval-unit=seconds

bucket4j.filters[0].rate-limits[1].expression="getHeader('X-api-key')"
bucket4j.filters[0].rate-limits[1].execute-condition=getHeader('X-api-key').startsWith('BX001-')
bucket4j.filters[0].rate-limits[1].bandwidths[0].capacity=4
bucket4j.filters[0].rate-limits[1].bandwidths[0].time=10
bucket4j.filters[0].rate-limits[1].bandwidths[0].unit=seconds
bucket4j.filters[0].rate-limits[1].bandwidths[0].fixed-refill-interval=45
bucket4j.filters[0].rate-limits[1].bandwidths[0].fixed-refill-interval-unit=seconds

#spring.security.user.name=username
#spring.security.user.password=password

spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3307/rate_limit?useSSL=false
spring.datasource.username=root
spring.datasource.password=root2022
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
#spring.jpa.show-sql: true

springsecurity.rest.token.storage.jwt.secret = jwtSecretKeyRateLimiting09082022123456789012
